{"version":3,"file":"static/js/627.7aad83d9.chunk.js","mappings":"kNACA,EAAwB,uBAAxB,EAAsD,sBAAtD,EAAmF,sB,SC8CnF,EA1CgB,SAAHA,GAA4B,IAAtBC,EAAcD,EAAdC,eACjBC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEdG,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACRb,EAAe,sCAADc,OAC0BH,EAAO,mCAE5CI,MAAK,SAAAC,GAAI,OAAIA,EAAKX,QAAQY,MAAM,EAAG,GAAG,IACtCF,MAAK,SAAAC,GAAI,OAAIV,EAAWU,EAAK,IAC7BE,OAAM,kBAAMR,GAAS,EAAK,GAC/B,GAAG,CAACV,EAAgBW,KAGlBQ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIX,IAAUJ,KACVgB,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAUH,SAAC,sDAI1Bf,EAAQmB,OAAS,GAChBH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAASH,SACrBf,EAAQoB,KAAI,SAAAC,GAAM,OACjBP,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAASH,SAAEM,EAAOC,UAChCN,EAAAA,EAAAA,KAAA,KAAAD,SAAIM,EAAOE,YAFJF,EAAOG,GAGX,OAITR,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gDAIX,C","sources":["webpack://goit-react-hw-05-movies/./src/components-styles/Reviews.module.css?7ea9","components/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Reviews_error__XbL4s\",\"list\":\"Reviews_list__NfW5y\",\"nick\":\"Reviews_nick__+1z5+\"};","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from '../components-styles/Reviews.module.css';\n\nconst Reviews = ({ handleFetching }) => {\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    handleFetching(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`\n    )\n      .then(data => data.results.slice(0, 10))\n      .then(data => setResults(data))\n      .catch(() => setError(true));\n  }, [handleFetching, movieId]);\n\n  return (\n    <div>\n      {(error || !results) && (\n        <p className={css.error}>\n          Error: Failed to get information from the server.\n        </p>\n      )}\n      {results.length > 0 ? (\n        <ul className={css.list}>\n          {results.map(result => (\n            <li key={result.id}>\n              <p className={css.nick}>{result.author}</p>\n              <p>{result.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  handleFetching: PropTypes.func.isRequired,\n};\n\nexport default Reviews;"],"names":["_ref","handleFetching","_useState","useState","_useState2","_slicedToArray","results","setResults","_useState3","_useState4","error","setError","movieId","useParams","useEffect","concat","then","data","slice","catch","_jsxs","children","_jsx","className","css","length","map","result","author","content","id"],"sourceRoot":""}